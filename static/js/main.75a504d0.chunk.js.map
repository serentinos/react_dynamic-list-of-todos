{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedTodo","selectedTodoId","className","map","todo","id","title","completed","isSelected","cn","type","onClick","TodoFilter","query","setQuery","filterStatus","setFilterStatus","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onSelectTodo","useState","isLoading","setIsLoading","user","setUser","useEffect","fetchData","a","userId","result","Error","handleCloseButton","useCallback","href","email","name","App","isTodosLoaded","setIsTodosLoaded","setTodos","selectedTodo","preparedTodos","useMemo","filter","regex","RegExp","trim","isStatusMatch","todoCompleted","filterStage","checkStatus","test","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75a504d0.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n  selectedTodoId: number | undefined;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id, title, completed } = todo;\n          const isSelected = selectedTodoId === id;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className={cn({ 'has-background-info-light': isSelected })}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye': !isSelected,\n                      'fa-eye-slash': isSelected,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent, FC } from 'react';\n\ninterface Props {\n  query: string,\n  filterStatus: string,\n  setQuery: React.Dispatch<React.SetStateAction<string>>,\n  setFilterStatus: React.Dispatch<React.SetStateAction<string>>,\n}\n\nexport const TodoFilter:FC<Props> = ({\n  query,\n  setQuery,\n  filterStatus,\n  setFilterStatus,\n}) => {\n  const resetQuery = () => setQuery('');\n\n  const handleQueryChange = (\n    event: ChangeEvent<HTMLInputElement>,\n  ) => {\n    setQuery(event.target.value);\n  };\n\n  const handleFilterMode = (event:ChangeEvent<HTMLSelectElement>) => {\n    setFilterStatus(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterStatus}\n            onChange={handleFilterMode}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo;\n  onSelectTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, onSelectTodo }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await getUser(todo.userId);\n\n        setUser(result);\n        setIsLoading(false);\n      } catch (error) {\n        throw new Error('Something went wrong: Could load data');\n      }\n    };\n\n    fetchData();\n  }, [todo.userId]);\n\n  const handleCloseButton = useCallback(() => {\n    onSelectTodo(null);\n  }, [onSelectTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseButton}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\n\nconst checkStatus = (\n  todoCompleted: boolean,\n  filterStage: string,\n) => {\n  switch (filterStage) {\n    case 'completed':\n      return todoCompleted === true;\n    case 'active':\n      return todoCompleted === false;\n    default:\n      return true;\n  }\n};\n\nexport const App: React.FC = () => {\n  const [isTodosLoaded, setIsTodosLoaded] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setTodos(await getTodos());\n        setIsTodosLoaded(true);\n      } catch (error) {\n        throw new Error('Something went wrong: Could load data');\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const preparedTodos = useMemo(() => {\n    return todos.filter(todo => {\n      const regex = new RegExp(query.trim(), 'gi');\n\n      const isStatusMatch = checkStatus(todo.completed, filterStatus);\n\n      return regex.test(todo.title) && isStatusMatch;\n    });\n  }, [todos, query, filterStatus]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filterStatus={filterStatus}\n                setFilterStatus={setFilterStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isTodosLoaded\n                ? (\n                  <TodoList\n                    todos={preparedTodos}\n                    setSelectedTodo={setSelectedTodo}\n                    selectedTodoId={selectedTodo?.id}\n                  />\n                ) : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n      && (\n        <TodoModal\n          todo={selectedTodo}\n          onSelectTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}